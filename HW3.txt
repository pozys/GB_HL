3) Причин увеличения количества запросов может быть очень много. Если не касатся вполне нормальных вариантов, вроде увеличения трафика на веб-ресурсе, что закономерно может увеличивать и количество запросов, то можно остановиться на неоптимальных запросах, которые пишет разработчик. Например:
- игнорирование пакетной вставки данных, иными словами разработчик инсёртит в таблицу каждую запись из требующих добавления отдельно, вместо того, чтобы вставить их одним запросом.
- выполнение нескольких запросов и объединение полученных данных непосредственно в коде, вместо того, чтобы получить все данные одним запросом, используя JOIN и UNION.
- обновление неизмененных записей.
- неумелое использование (или полный отказ от использования) кэша (через какой-нибудь Redis)

4) MySQL может не использовать индекс, если оптимизатор посчитает, что простое сканирование таблицы будет эффективнее. В русском переводе их документации написано, что индекс не будет применяться, "если использование индекса требует от MySQL прохода более чем по 30% строк в данной таблице".
Если я не ошибаюсь, то на небольших (как точно определяется небольшая) таблицах индекс не используется.
Где-то встречал информацию, что индекс не задействуется в условиях-отрицаниях (типа "!=", "! IN").

5) Индекс можно применить принудительно через операторы USE|FORCE INDEX